package com.dmitry.muravev.chat.controller;

import com.dmitry.muravev.chat.dto.request.SendMessageRequest;
import com.dmitry.muravev.chat.dto.response.GetMessagesResponse;
import com.dmitry.muravev.chat.dto.response.SendMessageResponse;
import com.dmitry.muravev.chat.security.jwt.JwtUser;
import com.dmitry.muravev.chat.service.MessageService;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Pageable;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.annotations.ApiIgnore;

@RestController
@RequiredArgsConstructor
public class MessageController {

    private final MessageService messageService;


    /**
     * Handle send message requests.
     *
     * @param request {@link SendMessageRequest} contains message content.
     * @param authentication autowired {@link Authentication} object,
     *                       contains authenticated user info.
     * @return {@link SendMessageResponse} contains success message
     * sending info
     */
    @PostMapping("/messages")
    public SendMessageResponse sendMessage(@RequestBody SendMessageRequest request,
                                               @ApiIgnore Authentication authentication) {
        JwtUser user = (JwtUser) authentication.getPrincipal();
        return messageService.saveMessage(request, user.getUsername());
    }

    /**
     * Handle get messages requests.
     *
     * @param pageable {@link Pageable} autogenerated object from request parameters,
     *                                 contains info about message selecting.
     * @return {@link GetMessagesResponse} contains list of requested messages.
     */
    @GetMapping("/messages")
    public GetMessagesResponse getMessages(@ApiIgnore Pageable pageable) {
        return messageService.getMessages(pageable);
    }
}
